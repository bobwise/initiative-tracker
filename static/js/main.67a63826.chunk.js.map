{"version":3,"sources":["assets/icons/Delete.js","assets/icons/Hamburger.js","components/InitiativeEntry/InitiativeEntry.js","components/InitiativeOrder/InitiativeOrder.js","assets/icons/Divider.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SvgDelete","props","react_default","a","createElement","Object","assign","viewBox","d","SvgHamburger","version","InitiativeEntry","handleInputChange","event","target","value","type","checked","name","onUpdate","id","useEffect","isActive","document","getElementById","focus","react_beautiful_dnd_esm","draggableId","toString","index","provided","snapshot","className","classNames","initiative_entry","is_dragging","isDragging","onKeyDown","e","keyCode","deleteCallback","draggableProps","dragHandleProps","ref","innerRef","tabIndex","Hamburger","aria-label","onClick","select","onChange","pattern","initiative","Delete","uniqueId","require","compareEntries","b","a_value","b_value","InitiativeOrder","nameInputRef","useRef","initInputRef","_useState","useState","initialEntries","_useState2","slicedToArray","allEntries","setAllEntries","_useState3","_useState4","focusedIndex","setFocusedIndex","_useState5","_useState6","initiativeOrderMessage","setInitiativeOrderMessage","_useState7","_useState8","setIsDragging","clearEntries","addEntry","newItems","toConsumableArray","isNaN","current","trim","push","Number","parseInt","sort","map","item","killChild","child","filter","updateEntry","propName","newEntries","objectSpread","defineProperty","preventDefault","classList","contains","length","role","htmlFor","aria-live","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","reorder","source","droppableId","droppableProps","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","components_InitiativeEntry_InitiativeEntry","displayNum","key","comments","placeholder","SvgDivider","transform","x","y","width","height","App","entries","Divider","components_InitiativeOrder_InitiativeOrder","href","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67a63826.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SvgDelete = props => (\n  <svg viewBox=\"0 0 469.333 469.333\" {...props}>\n    <path d=\"M426.667 0h-384C19.146 0 0 19.135 0 42.667v384c0 23.531 19.146 42.667 42.667 42.667h384c23.521 0 42.667-19.135 42.667-42.667v-384C469.333 19.135 450.188 0 426.667 0zm-88.461 308.043c4.167 4.165 4.167 10.919 0 15.085l-15.081 15.082c-4.167 4.165-10.919 4.165-15.086 0l-73.374-73.374-73.374 73.374c-4.167 4.165-10.919 4.165-15.086 0l-15.081-15.082c-4.167-4.165-4.167-10.919 0-15.085l73.374-73.375-73.374-73.374c-4.167-4.165-4.167-10.919 0-15.085l15.081-15.082c4.167-4.165 10.919-4.165 15.086 0l73.374 73.374 73.374-73.374c4.167-4.165 10.919-4.165 15.086 0l15.081 15.082c4.167 4.165 4.167 10.919 0 15.085l-73.374 73.374 73.374 73.375z\" />\n  </svg>\n);\n\nexport default SvgDelete;\n","import React from \"react\";\n\nconst css = `\nenable-background:new 0 0 32 32;\n`;\n\nconst SvgHamburger = props => (\n  <svg\n    version=\"1.1\" viewBox=\"0 0 32 32\" >\n      <style>{css}</style>\n    <path d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\" /></svg>\n);\n\nexport default SvgHamburger;\n","import React, { useEffect, useState } from \"react\"\nimport DeleteIcon from \"../../assets/icons/Delete\";\nimport HamburgerIcon from \"../../assets/icons/Hamburger\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"./InitiativeEntry.scss\";\nimport classNames from \"classnames\";\n\nconst InitiativeEntry = (props) => {\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    // pass the new value up to the parent\n    props.onUpdate(props.id, name, value);\n  }\n\n  useEffect(() => {\n    if (props.isActive) { \n      // this should be a ref, but we already have a framework ref\n      // on that container for drag and drop.\n      document.getElementById(\"itemContainer\" + props.id).focus(); \n    }\n  }, [props.isActive]) // do it when it loads the first time\n  \n  return (\n    <Draggable\n      draggableId={props.id.toString()}\n      index={props.index}\n    >\n      {(provided, snapshot) => (\n        <div\n          id={\"itemContainer\" + props.id}\n          className={classNames({\n            initiative_entry: true,\n            // initiative_entry__active: props.isActive,\n            is_dragging: snapshot.isDragging\n          })}\n          onKeyDown={e => {\n            if (\n              e.target.id === \"itemContainer\" + props.id &&\n              (e.keyCode === 46 || e.keyCode === 8)\n            ) {\n              props.deleteCallback(props.id);\n            }\n          }}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <div\n            className=\"grabber hamburgerIcon\"\n            {...provided.dragHandleProps}\n            tabIndex={0}\n          >\n            <HamburgerIcon></HamburgerIcon>\n          </div>\n          <div className=\"name\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              aria-label=\"Character Name\"\n              value={props.name}\n              onClick={e => {\n                e.target.select();\n              }}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"initiative_roll\">\n            <input\n              type=\"text\"\n              name=\"initiative\"\n              pattern=\"[0-9]*\"\n              aria-label=\"Initiative\"\n              value={props.initiative}\n              onClick={e => {\n                e.target.select();\n              }}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"actions\">\n            {/* call up to my parent and tell them to kill me */}\n            {props.deleteCallback && (\n              <div\n                className=\"deleteIcon\"\n                onClick={() => {\n                  props.deleteCallback(props.id);\n                }}\n              >\n                <DeleteIcon />\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default InitiativeEntry;\n","import React, { useState, useRef, useEffect } from \"react\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport InitiativeEntry from \"../InitiativeEntry/InitiativeEntry\";\nimport \"./InitiativeOrder.scss\";\n\nvar uniqueId = require(\"lodash.uniqueid\");\n\nconst compareEntries = (a, b) => {\n  let comparison = 0;\n  let a_value = a.initiative;\n  let b_value = b.initiative;\n\n  if (a_value > b_value) {\n    comparison = 1;\n  } else if (b_value > a_value) {\n    comparison = -1;\n  } else {\n    comparison = 0;\n  }\n\n  // reverse the array so the highest score is first\n  return comparison * -1;\n}\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst InitiativeOrder = (props) => {\n\n  const nameInputRef = useRef(null);\n  const initInputRef = useRef(null);\n\n  const [allEntries, setAllEntries] = useState(props.initialEntries ? props.initialEntries : []);\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  const [initiativeOrderMessage, setInitiativeOrderMessage] = useState(\"\");\n  const [isDragging, setIsDragging] = useState(false);\n\n  const clearEntries = () => {\n    setAllEntries([]);\n    setInitiativeOrderMessage(\"The initiative order is empty\");\n  }\n  const addEntry = () => {\n    let newItems = [...allEntries];\n\n    if (\n      !isNaN(initInputRef.current.value) &&\n      nameInputRef.current.value.trim() !== \"\"\n    ) {\n\n      newItems.push({\n        name: nameInputRef.current.value.trim(),\n        initiative: Number(initInputRef.current.value),\n        id: parseInt(uniqueId()),\n      });\n    }\n\n    newItems = newItems.sort(compareEntries);\n\n    setInitiativeOrderMessage(\"Initiative Order is: \" + newItems.map((item) => item.name));\n    setAllEntries(newItems);\n  }\n  const killChild = (child) => {\n    // delete all reference to child\n    setAllEntries(allEntries.filter(e => e.id !== child));\n  }\n  const updateEntry = (id, propName, value) => {\n\n    // console.log(id + \" , \" + propName + \" , \" + value);\n\n    const newEntries = allEntries.map((item, index) => {\n      if (item.id === id) {\n        // this still feels like a hack\n        if (propName === \"initiative\") {\n          value = parseInt(value);\n\n          if (isNaN(value)) {\n            return {\n              ...item,\n              [propName]: 0\n            };\n          } else {\n            return {\n              ...item,\n              [propName]: parseInt(value)\n            };\n          }\n        }\n\n        return {\n          ...item,\n          [propName]: value\n        };\n      } else {\n        return item;\n      }\n    });\n\n    setAllEntries(newEntries);\n  }\n  const handleKeyDown = (e) => {\n    // TODO - I think keyCode is deprecated\n\n    // console.log(e.keyCode);\n\n    // ignore the arrow keys if focus is in the initiative entry field\n    if (e.target.name === \"init_val\") {\n      if (e.keyCode === 40 || e.keyCode === 38) {\n        e.preventDefault();\n      }\n    }\n\n    switch (e.keyCode) {\n      case 32:\n        if (e.target.classList.contains(\"initiative_entry\")) {\n          if (isDragging) {\n            setIsDragging(false);\n          } else {\n            // if (focusedIndex > 0) {setFocusedIndex(focusedIndex+1);}\n            setIsDragging(true);\n          }\n        }\n      break;\n\n      case 27:\n        if (e.target.classList.contains(\"initiative_entry\")) {\n          if (isDragging) {\n            setIsDragging(false);\n          }\n        }\n      break;\n\n      case 13:\n\n        if (e.target.name === \"clearButton\") {\n          clearEntries();\n        } else {\n          addEntry();\n        }\n\n        nameInputRef.current.focus();\n        break;\n      case 37: //left\n        break;\n      case 38: //up\n        if (focusedIndex > -1) {\n          if (focusedIndex === 0) { nameInputRef.current.focus(); };\n          setFocusedIndex(focusedIndex - 1);\n        }\n        break;\n      case 39: //right\n        break;\n      case 40: //down\n        if (focusedIndex < allEntries.length - 1) {\n          setFocusedIndex(focusedIndex + 1);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  const onDragEnd = (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      allEntries,\n      result.source.index,\n      result.destination.index\n    );\n\n    setAllEntries(items);\n    setInitiativeOrderMessage(\"Initiative Order is: \" + items.map((item) => item.name));\n  }\n\n  useEffect(() => {\n    nameInputRef.current.focus();\n  }, []) // do it when it loads the first time\n  useEffect(() => {\n    nameInputRef.current.value = \"\";\n    initInputRef.current.value = \"\";\n  }, [allEntries]) // do it when allEntries changes\n\n  return (\n    <div className=\"initiative_order\" onKeyDown={handleKeyDown}>\n      <div className=\"form_container\" role=\"form\">\n        <div className=\"field_container\">\n          <label htmlFor=\"char_name\">Character Name</label>\n          <input\n            type=\"text\"\n            name=\"char_name\"\n            id=\"char_name\"\n            aria-label=\"Character Name\"\n            onClick={e => {\n              e.target.select(); // highlight the value when I click in, don't just put the cursor\n            }}\n            ref={nameInputRef}\n          ></input>\n        </div>\n        <div className=\"field_container\">\n          <label htmlFor=\"init_val\">Initiative</label>\n          <input\n            type=\"number\"\n            aria-label=\"Initiative\"\n            name=\"init_val\"\n            id=\"init_val\"\n            pattern=\"[0-9]*\"\n            onClick={e => {\n              e.target.select();\n            }}\n            ref={initInputRef}\n          ></input>\n        </div>\n        <button \n          className='submitButton' \n          aria-label=\"Add Initiative Entry\"\n          onClick={() => { addEntry(); nameInputRef.current.focus(); }}\n        >\n          Add\n        </button>\n      </div>\n      <div\n        aria-live=\"polite\"\n        className=\"screen-reader-text\"\n        id=\"initiative_live\"\n      >\n        {initiativeOrderMessage}\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div className=\"entries\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              role=\"region\"\n            >\n              <ReactCSSTransitionGroup\n                transitionName=\"example\"\n                transitionEnterTimeout={500}\n                transitionLeaveTimeout={300}\n              >\n                {allEntries\n                  .map((item, index) => {\n                    return (\n                      <InitiativeEntry\n                        index={index}\n                        isActive={index === focusedIndex && !isDragging} // if we're dragging, focus is managed by the dnd lib\n                        displayNum={(index + 1).toString()}\n                        id={item.id}\n                        key={item.id}\n                        name={item.name}\n                        initiative={item.initiative}\n                        comments={item.comments}\n                        onUpdate={updateEntry}\n                        deleteCallback={killChild}\n                      />\n                    );\n                  })}\n              </ReactCSSTransitionGroup>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      {allEntries.length > 0 && (\n        <footer>\n          <p>Drag and drop to adjust order.</p>\n          <p className=\"hide-on-mobile\"><kbd>Tab</kbd> and <kbd>Space</kbd> to select rows, <kbd>↑</kbd> and <kbd>↓</kbd> to move them.</p>\n          <button className=\"clearButton\" name=\"clearButton\" onClick={clearEntries}>\n            Clear\n          </button>\n        </footer>\n      )}\n    </div>\n  )\n}\n\nexport default InitiativeOrder;\n","import React from \"react\";\n\nconst css = `\n.cls-1{fill:none;}\n.cls-2{clip-path:url(#clip-path);}\n.cls-3{fill:#822000;}\n`;\n\nconst SvgDivider = props => (\n  <svg className='dividerImage' viewBox=\"0 0 226.08 3\">\n    <defs>\n      <style>{css}</style>\n      <clipPath id=\"clip-path\" transform=\"translate(-666 -479)\">\n        <rect className=\"cls-1\" x=\"666\" y=\"479\" width=\"226.08\" height=\"3\" />\n      </clipPath>\n    </defs>\n    <title>stat-block-header-bar</title>\n    <g className=\"cls-2\">\n      <path\n        className=\"cls-3\"\n        d=\"M666,482c5.76,0,226.08-1.5,226.08-1.5S671.76,479,666,479Z\"\n        transform=\"translate(-666 -479)\"\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgDivider;\n","import React from \"react\";\nimport InitiativeOrder from \"../InitiativeOrder/InitiativeOrder.js\";\nimport \"./App.scss\";\nimport Divider from \"../../assets/icons/Divider\";\n\nconst App = (props) => {\n\n  let entries = [\n    {\n      id: 123,\n      name: \"Anya\",\n      initiative: 18\n    },\n    {\n      id: 234,\n      name: \"Wizowski\",\n      initiative: 15\n    },\n    {\n      id: 1233,\n      name: \"Milo\",\n      initiative: 15\n    },\n    {\n      id: 23444,\n      name: \"Shandri\",\n      initiative: 15\n    },\n    {\n      id: 2352334,\n      name: \"Raj\",\n      initiative: 12\n    },\n    {\n      id: 22333333352334,\n      name: \"Xhauk\",\n      initiative: 12\n    },\n    {\n      id: 223352334,\n      name: \"Kriv\",\n      initiative: 12\n    }\n  ]\n\n  // Comment this line to include test data\n  entries = [];\n\n  return (\n    <main>\n      <div className=\"App\">\n        <h1>Initiative Tracker</h1>\n        <Divider />\n        <InitiativeOrder\n          initialEntries={entries}\n        ></InitiativeOrder>\n\n      </div>\n      <footer className='siteFooter'>\n        <p>by <a href=\"http://twitter.com/bobwise/\">Bobwise</a></p>\n      </footer>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}