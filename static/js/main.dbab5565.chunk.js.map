{"version":3,"sources":["assets/icons/Delete.js","assets/icons/Hamburger.js","components/InitiativeEntry/InitiativeEntry.js","components/InitiativeOrder/InitiativeOrder.js","assets/icons/Divider.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SvgDelete","props","react_default","a","createElement","Object","assign","viewBox","d","SvgHamburger","version","InitiativeEntry","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","event","target","value","type","checked","name","onUpdate","id","_this2","_this$props","initiative","deleteCallback","triggerSortCallback","react_beautiful_dnd_esm","draggableId","toString","index","provided","snapshot","className","classNames","initiative_entry","initiative_entry__active","isActive","is_dragging","isDragging","onKeyDown","e","keyCode","draggableProps","dragHandleProps","ref","innerRef","tabIndex","Hamburger","aria-label","onClick","select","onChange","pattern","onBlur","Delete","Component","defaultProps","uniqueId","require","InitiativeOrder","addEntry","updateEntry","killChild","sortEntries","clearEntries","updateNewName","updateNewInit","handleKeyDown","onDragEnd","nameInputRef","React","createRef","initInputRef","state","allEntries","initialEntries","initiativeOrder","newEntry","focusedIndex","activeIndex","initativeOrderMessage","result","destination","items","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","slicedToArray","reorder","source","newMessage","length","map","item","setState","current","focus","objectSpread","parseInt","preventDefault","b","a_value","b_value","newInitiative","toConsumableArray","sort","compareEntries","newItems","isNaN","trim","push","child","_this$state","newInitiativeOrder","filter","newAllEntries","propName","_this3","defineProperty","_this4","htmlFor","role","aria-live","droppableId","droppableProps","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","x","components_InitiativeEntry_InitiativeEntry","displayNum","key","comments","placeholder","SvgDivider","transform","y","width","height","App","entries","tipsVisible","Divider","components_InitiativeOrder_InitiativeOrder","href","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbab5565.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SvgDelete = props => (\n  <svg viewBox=\"0 0 469.333 469.333\" {...props}>\n    <path d=\"M426.667 0h-384C19.146 0 0 19.135 0 42.667v384c0 23.531 19.146 42.667 42.667 42.667h384c23.521 0 42.667-19.135 42.667-42.667v-384C469.333 19.135 450.188 0 426.667 0zm-88.461 308.043c4.167 4.165 4.167 10.919 0 15.085l-15.081 15.082c-4.167 4.165-10.919 4.165-15.086 0l-73.374-73.374-73.374 73.374c-4.167 4.165-10.919 4.165-15.086 0l-15.081-15.082c-4.167-4.165-4.167-10.919 0-15.085l73.374-73.375-73.374-73.374c-4.167-4.165-4.167-10.919 0-15.085l15.081-15.082c4.167-4.165 10.919-4.165 15.086 0l73.374 73.374 73.374-73.374c4.167-4.165 10.919-4.165 15.086 0l15.081 15.082c4.167 4.165 4.167 10.919 0 15.085l-73.374 73.374 73.374 73.375z\" />\n  </svg>\n);\n\nexport default SvgDelete;\n","import React from \"react\";\n\nconst css = `\nenable-background:new 0 0 32 32;\n`;\n\nconst SvgHamburger = props => (\n  <svg\n    version=\"1.1\" viewBox=\"0 0 32 32\" >\n      <style>{css}</style>\n    <path d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\" /></svg>\n);\n\nexport default SvgHamburger;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from \"../../assets/icons/Delete\";\nimport HamburgerIcon from \"../../assets/icons/Hamburger\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"./InitiativeEntry.scss\";\nimport classNames from \"classnames\";\n\nclass InitiativeEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    // pass the new value up to the parent\n    this.props.onUpdate(this.props.id, name, value);\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      initiative,\n      deleteCallback,\n      triggerSortCallback\n    } = this.props;\n\n    return (\n      <Draggable\n        draggableId={this.props.id.toString()}\n        index={this.props.index}\n      >\n        {(provided, snapshot) => (\n          <div\n            id={\"itemContainer\" + this.props.id}\n            className={classNames({\n              initiative_entry: true,\n              initiative_entry__active: this.props.isActive,\n              is_dragging: snapshot.isDragging\n            })}\n            onKeyDown={e => {\n              if (\n                e.target.id === \"itemContainer\" + this.props.id &&\n                (e.keyCode === 46 || e.keyCode === 8)\n              ) {\n                deleteCallback(id);\n              }\n            }}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <div\n              className=\"grabber hamburgerIcon\"\n              {...provided.dragHandleProps}\n              tabIndex={-1}\n            >\n              <HamburgerIcon></HamburgerIcon>\n            </div>\n            <div className=\"name\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                aria-label=\"Name\"\n                value={name}\n                onClick={e => {\n                  e.target.select();\n                }}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"initiative_roll\">\n              <input\n                type=\"text\"\n                name=\"initiative\"\n                pattern=\"[0-9]*\"\n                aria-label=\"Initiative\"\n                value={initiative}\n                onClick={e => {\n                  e.target.select();\n                }}\n                onChange={this.handleInputChange}\n                onBlur={() => {\n                  triggerSortCallback();\n                }}\n              />\n            </div>\n            <div className=\"actions\">\n              {/* call up to my parent and tell them to kill me */}\n              {deleteCallback && (\n                <div\n                  className=\"deleteIcon\"\n                  onClick={() => {\n                    deleteCallback(id);\n                  }}\n                >\n                  <DeleteIcon />\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nInitiativeEntry.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  initiative: PropTypes.number,\n  tiebreakerOrder: PropTypes.number,\n  isActive: PropTypes.bool,\n  onUpdate: PropTypes.func,\n  deleteCallback: PropTypes.func,\n  triggerSortCallback: PropTypes.func\n};\n\nInitiativeEntry.defaultProps = {};\n\nexport default InitiativeEntry;\n","import React, { Component } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport PropTypes from \"prop-types\";\nimport InitiativeEntry from \"../InitiativeEntry/InitiativeEntry\";\nimport \"./InitiativeOrder.scss\";\n\nvar uniqueId = require(\"lodash.uniqueid\");\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nclass InitiativeOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addEntry = this.addEntry.bind(this);\n    this.updateEntry = this.updateEntry.bind(this);\n    this.killChild = this.killChild.bind(this);\n    this.sortEntries = this.sortEntries.bind(this);\n    this.clearEntries = this.clearEntries.bind(this);\n    this.updateNewName = this.updateNewName.bind(this);\n    this.updateNewInit = this.updateNewInit.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n\n    this.nameInputRef = React.createRef();\n    this.initInputRef = React.createRef();\n\n    this.state = {\n      allEntries: props.initialEntries ? props.initialEntries : [],\n      initiativeOrder: [],\n      newEntry: {\n        name: \"\",\n        initiative: \"\"\n      },\n      // it's focused when it's hovered, either with the mouse or keyboard\n      focusedIndex: -1,\n      // it's active when it's been selected to drag, either by clicking or keyboard\n      activeIndex: -1,\n      initativeOrderMessage: \"\",\n    };\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.initiativeOrder,\n      result.source.index,\n      result.destination.index\n    );\n\n    let newMessage = \"The Initiative Order is \";\n\n    if (items.length === 0){\n      newMessage += \"empty\";\n    } else {\n      newMessage += items.map((item) => item.name);\n    }\n\n    this.setState({\n      allEntries: items,\n      initiativeOrder: items,\n      initativeOrderMessage: newMessage,\n    });\n  }\n\n  componentDidMount() {\n    this.sortEntries();\n    this.nameInputRef.current.focus();\n  }\n\n  updateNewName(event) {\n    this.setState({\n      newEntry: {\n        ...this.state.newEntry,\n        name: event.target.value\n      }\n    });\n  }\n\n  updateNewInit(event) {\n    this.setState({\n      newEntry: {\n        ...this.state.newEntry,\n        initiative: parseInt(event.target.value)\n      }\n    });\n  }\n\n  handleKeyDown(e) {\n    // ignore the arrow keys if focus is in the initiative entry field\n    if (e.target.name === \"init_val\") {\n      if (e.keyCode === 40 || e.keyCode === 38) {\n        e.preventDefault();\n      }\n    }\n\n    switch (e.keyCode) {\n      case 13:\n\n        if (e.target.name === \"clearButton\") {\n          this.clearEntries();\n        } else {\n          this.addEntry();\n        }\n\n        this.nameInputRef.current.focus();\n        break;\n      case 37: //left\n        break;\n      case 38: //up\n        if (this.state.focusedIndex > -1) {\n          if (this.state.focusedIndex === 0) { this.nameInputRef.current.focus(); };\n          this.setState({ focusedIndex: this.state.focusedIndex - 1 });\n        }\n        break;\n      case 39: //right\n        break;\n      case 40: //down\n        if (this.state.focusedIndex < this.state.allEntries.length - 1) {\n          this.setState({ focusedIndex: this.state.focusedIndex + 1 });\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  clearEntries() {\n    this.setState({\n      allEntries: [],\n      initiativeOrder: [],\n      newEntry: {\n        name: \"\",\n        initiative: \"\"\n      },\n      initativeOrderMessage: \"The initiative order is empty\",\n    });\n  }\n\n  compareEntries(a, b) {\n    let comparison = 0;\n    let a_value = a.initiative;\n    let b_value = b.initiative;\n\n    if (a_value > b_value) {\n      // console.log(a_value + \" is greater than \" + b_value);\n      comparison = 1;\n    } else if (b_value > a_value) {\n      // console.log(a_value + \" is less than \" + b_value);\n      comparison = -1;\n    } else {\n      // console.log(a_value + \" is equal to \" + b_value);\n      comparison = 0;\n    }\n    // reverse the array\n    return comparison * -1;\n  }\n\n  sortEntries() {\n    const { allEntries } = this.state;\n\n    const sortedItems = [...allEntries].sort(this.compareEntries);\n\n    const newInitiative = sortedItems;\n\n    const newMessage = \"Initiative Order is: \" +\n      newInitiative.map((item) => item.name);\n\n    this.setState({\n      initiativeOrder: newInitiative,\n      initativeOrderMessage: newMessage,\n    });\n  }\n\n  addEntry() {\n    const { allEntries } = this.state;\n\n    let newItems = [...allEntries];\n\n    if (\n      !isNaN(this.state.newEntry.initiative) &&\n      this.state.newEntry.name.trim() !== \"\"\n    ) {\n      const newEntry = this.state.newEntry;\n      newEntry.id = parseInt(uniqueId());\n\n      newItems.push(newEntry);\n    }\n\n    this.setState(\n      {\n        allEntries: newItems,\n        newEntry: {\n          name: \"\",\n          initiative: \"\"\n        }\n      },\n      () => {\n        this.sortEntries();\n      }\n    );\n  }\n\n  killChild(child) {\n    const { initiativeOrder, allEntries } = this.state;\n\n    // delete all reference to child\n    let newInitiativeOrder = initiativeOrder.filter(e => e.id !== child);\n    let newAllEntries = allEntries.filter(e => e.id !== child);\n\n    this.setState({\n      initiativeOrder: newInitiativeOrder,\n      allEntries: newAllEntries\n    });\n  }\n\n  updateEntry(id, propName, value) {\n    this.setState(\n      state => {\n        const allEntries = state.allEntries.map((item, index) => {\n          if (item.id === id) {\n            // this still feels like a hack\n            if (propName === \"initiative\") {\n              value = parseInt(value);\n\n              if (isNaN(value)) {\n                return {\n                  ...item,\n                  [propName]: 0\n                };\n              } else {\n                return {\n                  ...item,\n                  [propName]: parseInt(value)\n                };\n              }\n            }\n\n            return {\n              ...item,\n              [propName]: value\n            };\n          } else {\n            return item;\n          }\n        });\n\n        return {\n          allEntries\n        };\n      },\n      () => {\n        this.sortEntries();\n      }\n    );\n  }\n\n  render() {\n    const { initiativeOrder } = this.state;\n\n    return (\n      <div className=\"initiative_order\" onKeyDown={this.handleKeyDown}>\n        <div className=\"form_container\">\n          <div className=\"field_container\">\n            <label htmlFor=\"char_name\">Name</label>\n            <input\n              type=\"text\"\n              name=\"char_name\"\n              id=\"char_name\"\n              value={this.state.newEntry.name}\n              onClick={e => {\n                e.target.select();\n              }}\n              onChange={this.updateNewName}\n              ref={this.nameInputRef}\n            // placeholder={\"Sylphira\"}\n            ></input>\n          </div>\n          <div className=\"field_container\">\n            <label htmlFor=\"init_val\">Initiative</label>\n            <input\n              type=\"number\"\n              name=\"init_val\"\n              id=\"init_val\"\n              pattern=\"[0-9]*\"\n              value={this.state.newEntry.initiative}\n              onClick={e => {\n                e.target.select();\n              }}\n              onChange={this.updateNewInit}\n              ref={this.initInputRef}\n            // placeholder={\"17\"}\n            ></input>\n          </div>\n          <button className='submitButton' onClick={() => { this.addEntry(); this.nameInputRef.current.focus(); }}>\n            Add\n          </button>\n        </div>\n        <div\n          role=\"region\"\n          aria-live=\"polite\"\n          className=\"screen-reader-text\"\n          id=\"initiative_live\"\n        >\n          {this.state.initativeOrderMessage}\n        </div>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div className=\"entries\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}>\n                <ReactCSSTransitionGroup\n                  transitionName=\"example\"\n                  transitionEnterTimeout={500}\n                  transitionLeaveTimeout={300}\n                >\n                  {initiativeOrder\n                    .filter(x => {\n                      return true;\n                    })\n                    .map((item, index) => {\n                      return (\n                        <InitiativeEntry\n                          index={index}\n                          // isActive={index === this.state.focusedIndex}\n                          displayNum={(index + 1).toString()}\n                          id={item.id}\n                          key={item.id}\n                          name={item.name}\n                          initiative={item.initiative}\n                          comments={item.comments}\n                          onUpdate={this.updateEntry}\n                          deleteCallback={this.killChild}\n                          triggerSortCallback={this.sortEntries}\n                        />\n                      );\n                    })}\n                </ReactCSSTransitionGroup>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        {initiativeOrder.length > 0 && (\n          <footer>\n            <p>Drag and drop to adjust order.</p>\n            <p><kbd>Tab</kbd> and <kbd>Space</kbd> to select rows, <kbd>↑</kbd> and <kbd>↓</kbd> to move them.</p>\n            <button className=\"clearButton\" name=\"clearButton\" onClick={this.clearEntries}>\n              Clear\n            </button>\n          </footer>\n        )}\n      </div>\n    );\n  }\n}\n\nInitiativeOrder.propTypes = {\n  initialEntries: PropTypes.array\n};\n\nexport default InitiativeOrder;\n","import React from \"react\";\n\nconst css = `\n.cls-1{fill:none;}\n.cls-2{clip-path:url(#clip-path);}\n.cls-3{fill:#822000;}\n`;\n\nconst SvgDivider = props => (\n  <svg className='dividerImage' viewBox=\"0 0 226.08 3\">\n    <defs>\n      <style>{css}</style>\n      <clipPath id=\"clip-path\" transform=\"translate(-666 -479)\">\n        <rect className=\"cls-1\" x=\"666\" y=\"479\" width=\"226.08\" height=\"3\" />\n      </clipPath>\n    </defs>\n    <title>stat-block-header-bar</title>\n    <g className=\"cls-2\">\n      <path\n        className=\"cls-3\"\n        d=\"M666,482c5.76,0,226.08-1.5,226.08-1.5S671.76,479,666,479Z\"\n        transform=\"translate(-666 -479)\"\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgDivider;\n","import React, { Component } from \"react\";\nimport InitiativeOrder from \"../InitiativeOrder/InitiativeOrder.js\";\nimport \"./App.scss\";\nimport Divider from \"../../assets/icons/Divider\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    let entries = [];\n\n    entries = [\n      {\n        id: 123,\n        name: \"Anya\",\n        initiative: 18\n      },\n      {\n        id: 234,\n        name: \"Wizowski\",\n        initiative: 15\n      },\n      {\n        id: 1233,\n        name: \"Milo\",\n        initiative: 15\n      },\n      {\n        id: 23444,\n        name: \"Shandri\",\n        initiative: 15\n      },\n      {\n        id: 2352334,\n        name: \"Raj\",\n        initiative: 12\n      },\n      {\n        id: 22333333352334,\n        name: \"Xhauk\",\n        initiative: 12\n      },\n      {\n        id: 223352334,\n        name: \"Kriv\",\n        initiative: 12\n      }\n    ]\n\n    // Comment to include test data\n    entries = [];\n\n    this.state = {\n      entries: entries,\n      tipsVisible: true,\n    };\n  }\n\n  render() {\n    const { entries } = this.state;\n\n    return (\n      <main>\n        <div className=\"App\">\n          <h1>Initiative Tracker</h1>\n          <Divider />\n          <InitiativeOrder\n            initialEntries={entries}\n          ></InitiativeOrder>\n          {/* <a className=\"rulesLink\" href=\"https://www.dndbeyond.com/sources/basic-rules/combat#Initiative\">How does <strong>initiative</strong> work again?</a> */}\n\n        </div>\n        <footer className='siteFooter'>\n          <p>by <a href=\"http://twitter.com/bobwise/\">Bobwise</a></p>\n        </footer>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}